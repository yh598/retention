from pyspark.sql import SparkSession
from pyspark.sql.functions import col, count, when, isnan, year, month
from pyspark.ml.feature import StringIndexer, VectorAssembler, StandardScaler
from pyspark.ml.classification import RandomForestClassifier
from pyspark.ml.evaluation import BinaryClassificationEvaluator

# Initialize Spark Session
spark = SparkSession.builder.appName("RetentionPrediction").getOrCreate()

# Define null threshold (50% missing values)
threshold = 0.5 * df.count()

# Drop columns exceeding threshold
null_counts = df.select([count(when(col(c).isNull(), c)).alias(c) for c in df.columns])
high_null_cols = [col for col, count in null_counts.collect()[0].asDict().items() if count > threshold]
df = df.drop(*high_null_cols)

print("Dropped columns:", high_null_cols)
df.printSchema()

from pyspark.sql.functions import mean

# Fill numeric columns with mean or median
numeric_cols = [c for c, t in df.dtypes if t in ("int", "double")]
for col_name in numeric_cols:
    median_value = df.approxQuantile(col_name, [0.5], 0.01)[0]  # Approximate median
    df = df.fillna({col_name: median_value})

# Fill categorical columns with mode
categorical_cols = [c for c, t in df.dtypes if t == "string"]
for col_name in categorical_cols:
    mode_value = df.groupBy(col_name).count().orderBy(col("count").desc()).first()[0]
    df = df.fillna({col_name: mode_value})

df.show(5)

from pyspark.ml.feature import StringIndexer, VectorAssembler

# Convert categorical features
indexers = [StringIndexer(inputCol=col_name, outputCol=f"{col_name}_index").fit(df) for col_name in categorical_cols]
for indexer in indexers:
    df = indexer.transform(df)

# Extract date-based features
df = df.withColumn("study_start_year", year(col("STUDY_START_DT")))
df = df.withColumn("study_start_month", month(col("STUDY_START_DT")))

# Drop original categorical & date columns
df = df.drop(*categorical_cols, "STUDY_START_DT")

# Define feature columns (excluding target)
feature_cols = [c for c in df.columns if c != "survival_flag"]

# Assemble feature vector
assembler = VectorAssembler(inputCols=feature_cols, outputCol="features")
df = assembler.transform(df).select("features", "survival_flag")

df.show(5)

# Split data (80% train, 20% test)
train_data, test_data = df.randomSplit([0.8, 0.2], seed=42)

# Define RandomForest Model
rf_model = RandomForestClassifier(featuresCol="features", labelCol="survival_flag", numTrees=100)

# Train the model
rf_trained = rf_model.fit(train_data)

# Make Predictions
predictions = rf_trained.transform(test_data)
predictions.select("survival_flag", "prediction", "probability").show(10)

evaluator = BinaryClassificationEvaluator(labelCol="survival_flag", metricName="areaUnderROC")
roc_auc = evaluator.evaluate(predictions)

print(f"Model AUC-ROC: {roc_auc}")


survival_flag
open_enrollment_cycle
PERSON_PERIOD_ID
PERSON_PERIOD_ID_HASH
STUDY_START_DT
STUDY_END_DT
RX_STUDY_START_DT
STUDY_PERIOD
CURRENT_STUDY_PERIOD_FLAG
FIRST_ELIG_MONTH_START_DT
LAST_ELIG_MONTH_END_DT
MBR_MED_MNTHS
RX_MEMBER_MONTHS
HCPK
HCPK_HASH
SUBSCRIBER_ID
SUBSCRIBER_ID_HASH_CD
SUBSCRIBER_KEY
SUBSCRIBER_KEY_HASH_CD
MBR_SFX
MBR_SFX_HASH_CD
MEMBER_ID
FIRST_NAME
MIDDLE_NAME
LAST_NAME
PARENT_GROUP_NUM
GROUP_NUM
GROUP_NAME
MEMBER_DOB
MEMBER_DOB_HASH_CD
AGE_IN_DAYS
AGE_IN_YEARS
FEMALE_FLAG
SUBSCRIBER_FLAG
SPOUSE_FLAG
DEPENDENT_FLAG
ADDRESS
ADDRESS_HASH
ADDR_LN_1
ADDR_LN_2
ADDR_LN_3
ZIPCODE
ZIPCODE_EXT
CITY_NAME
COUNTY_NAME
STATE
CALIFORNIA_FLAG
MARKETS_LOB
PRODUCT_LOB
MEDICAL_IND
FUND_TYPE_CD
FEP_OOS_IND
CORPORATE_MEMBERSHIP_IND
RACE_CD
RACE_DESC
ETHNIC_CD
ETHNIC_DESC
LANG_CD
LANGUAGE_DESC
LANGUAGE_HASH_CD
ACHCC_01
ACHCC_02
ACHCC_03
ACHCC_04
ACHCC_05
ACHCC_06
ACHCC_07
ACHCC_08
ACHCC_09
ACHCC_10
ACHCC_11
ACHCC_12
ACHCC_13
ACHCC_14
ACHCC_15
ACHCC_16
ACHCC_17
ACHCC_18
ACHCC_19
ACHCC_20
ACHCC_21
ACHCC_22
ACHCC_23
ACHCC_24
ACHCC_25
ACHCC_26
ACHCC_27
ACHCC_28
ACHCC_29
ACHCC_30
ACHCC_31
DXCG_MODEL_POP
DXCG_MED_MEMBER_MONTHS
DXCG_RX_MEMBER_MONTHS
CLIN_CATEG_NM
CLIN_COND_GRP_NM
COST_CAT_CODE
CLINICAL_CAT_CODE
DXCG_CONC_MED
DXCG_CONC_MED_LOG
DXCG_CONC_MED_MAX_HIST
DXCG_CONC_MED_MIN_HIST
DXCG_PROSP_MED
DXCG_PROSP_MED_LOG
DXCG_PROSP_MED_MAX_HIST
DXCG_PROSP_MED_MIN_HIST
DXCG_CONC_RX
DXCG_CONC_RX_LOG
DXCG_CONC_RX_MAX_HIST
DXCG_CONC_RX_MIN_HIST
DXCG_PROSP_RX
DXCG_PROSP_RX_LOG
DXCG_PROSP_RX_MAX_HIST
DXCG_PROSP_RX_MIN_HIST
DXCG_PROSP_HOSP
DXCG_HOSP_LOG
DXCG_PROSP_HOSP_MAX_HIST
DXCG_PROSP_HOSP_MIN_HIST
DX_HOMEBOUND_IND
DX_HIST_ALCOHOL_IND
DX_HIST_SMOKING_IND
DX_HIST_OSTEOPENIA_IND
DX_HIST_ABNORMAL_GAIT_IND
DX_HIST_NEURO_DEFICIT_IND
DX_HIST_WEAKNESS_IND
DX_HIST_AGE_DEBILITY_IND
DX_HIST_FALL_IND
DX_HIST_MOBILITY_IND
DX_HIST_FAM_MSK_IND
OP_EVENTS
MIN_OP_SERVICE_DT
MAX_OP_SERVICE_DT
MIN_ER_SERVICE_DT
MAX_ER_SERVICE_DT
DAYS_SINCE_LAST_ER
ER_VISITS
OP_SURG_VISITS
OP_OTHER_VISITS
OP_BILLED_AMT
OP_ALLOWED_AMT
OP_PAID_AMT
OP_FFSE_ALLOWED_AMT
OP_FFSE_PAID_AMT
OP_CLAIMS
OP_CLAIM_LINES
ASC_VISITS
OPH_SURG_VISITS
NYU_NON_EMER_PCT
NYU_EMER_PRI_CARE_PCT
NYU_EMER_DEPT_AMBUTRY_CARE_PCT
NYU_EMER_DEPT_PCT
NYU_INJUR_PCT
NYU_PSYCH_PCT
NYU_SA_PCT
NYU_UNCLS_PCT
OP_PROC_CNT
RX_CLAIMS
ANNUAL_DAYS_SUPPLY
ANNUAL_RX_CNT
ANNUAL_RX_ALLOW_AMT
ANNUAL_RX_COPAY_AMT
ANNUAL_RX_TRUE_OOP_AMT
ANNUAL_RX_MAIL_CNT
ANNUAL_RX_RETAIL_CNT
QTR_DAYS_SUPPLY
QTR_RX_CNT
QTR_ALLOW_AMT
QTR_COPAY_AMT
QTR_TRUE_OOP_AMT
QTR_RX_MAIL_CNT
QTR_RX_RETAIL_CNT
QTR_GCN_CNT
ANNUAL_GCN_CNT
QTR_NDC_CNT
ANNUAL_NDC_CNT
QTR_ROA_CNT
ANNUAL_ROA_CNT
DX_SDOH_EDUCATION_IND
DX_SDOH_EMPLOYMENT_IND
DX_SDOH_OCCUPATIONAL_IND
DX_SDOH_HOUSING_ECONOMIC_IND
DX_SDOH_SOCIAL_ENVIRONMENT_IND
DX_SDOH_UPBRINGING_IND
DX_SDOH_FAMILY_SUPPORT_IND
DX_SDOH_PSYCHOSOCIAL_IND
MIN_ADMIT_DT
MAX_ADMIT_DT
MIN_DISCHARGE_DT
MAX_DISCHARGE_DT
IP_BILLED_AMT
IP_ALLOWED_AMT
IP_PAID_AMT
IP_FFSE_ALLOWED_AMT
IP_FFSE_PAID_AMT
IP_CLAIMS
CLAIM_LINES
IP_ADMITS
IP_DAYS
READM_ELIG_ADMITS
READM_READMISSIONS
READM_TRIGGERS
ICU_DAYS
CCU_DAYS
INT_ICU_DAYS
INT_CCU_DAYS
REHAB_DAYS
ROUTINE_NURSERY_DAYS
GEN_NURSERY_DAYS
CONT_CARE_NURSERY_DAYS
INT_NURSERY_DAYS
NICU_DAYS
PSYCH_DAYS
DETOX_DAYS
BH_ALT_CARE_DAYS
OTHER_DAYS
ALL_DAYS
NON_ACUTE_DAYS
IP_CALENDAR_DAYS
ADMIT_AGE_IN_DAYS
ADMIT_AGE_IN_YEARS
FOP_CLM_CNT
FOP_AMT
FIP_CLM_CNT
FIP_AMT
PROF_CLM_CNT
PROF_AMT
RX_CLM_CNT
RX_AMT
TOTAL_EXPEND
TOTAL_MED
TOTAL_DOLLARS
TOTAL_UTIL
TOTAL_PMPM
MED_PMPM
RX_PMPM
MED_EXPEND_PCT
RX_EXPEND_PCT
IMPUTED_PROB_WHITE
IMPUTED_PROB_BLACK
IMPUTED_PROB_API
IMPUTED_PROB_AIAN
IMPUTED_PROB_MULTIRACE
IMPUTED_PROB_HISPANIC
SURNAME_ONLY_IMPUTED_FLAG
GEO_ONLY_IMPUTED_FLAG
BISG_IMPUTED_FLAG
RE_MAX
RE_MAX_PROB
CENSUS_TRACT_ID
CENSUS_BLOCK_GROUP_ID
FIPS
AREA_SQMI
E_TOTPOP
POP_DENSITY
E_HU
E_HH
E_POV
E_UNEMP
E_PCI
E_NOHSDP
E_AGE65
E_AGE17
E_DISABL
E_SNGPNT
E_MINRTY
E_LIMENG
E_MUNIT
E_MOBILE
E_CROWD
E_NOVEH
E_GROUPQ
EP_POV
EP_UNEMP
EP_PCI
EP_NOHSDP
EP_AGE65
EP_AGE17
EP_DISABL
EP_SNGPNT
EP_MINRTY
EP_LIMENG
EP_MUNIT
EP_MOBILE
EP_CROWD
EP_NOVEH
EP_GROUPQ
EPL_POV
EPL_UNEMP
EPL_PCI
EPL_NOHSDP
SPL_THEME1
RPL_THEME1
EPL_AGE65
EPL_AGE17
EPL_DISABL
EPL_SNGPNT
SPL_THEME2
RPL_THEME2
EPL_MINRTY
EPL_LIMENG
SPL_THEME3
RPL_THEME3
EPL_MUNIT
EPL_MOBILE
EPL_CROWD
EPL_NOVEH
EPL_GROUPQ
SPL_THEME4
RPL_THEME4
SPL_THEMES
RPL_THEMES
F_POV
F_UNEMP
F_PCI
F_NOHSDP
F_THEME1
F_AGE65
F_AGE17
F_DISABL
F_SNGPNT
F_THEME2
F_MINRTY
F_LIMENG
F_THEME3
F_MUNIT
F_MOBILE
F_CROWD
F_NOVEH
F_GROUPQ
F_THEME4
F_TOTAL
E_UNINSUR
EP_UNINSUR
E_DAYPOP
ADI_NATRANK
ADI_STATERNK
TOTAL_RX_ANTIDEPRESSANTS
TOT_DAYS_ANTIDEPRESSANTS
COV_DAYS_ANTIDEPRESSANTS
PDC_ANTIDEPRESSANTS
ANTIDEPRESSANTS_IS_ADHERENT
TOTAL_RX_ANTIVIRALS
TOT_DAYS_ANTIVIRALS
COV_DAYS_ANTIVIRALS
PDC_ANTIVIRALS
ANTIVIRALS_IS_ADHERENT
TOTAL_RX_ASTHMA
TOT_DAYS_ASTHMA
COV_DAYS_ASTHMA
PDC_ASTHMA
ASTHMA_IS_ADHERENT
TOTAL_RX_DIABETES
TOT_DAYS_DIABETES
COV_DAYS_DIABETES
PDC_DIABETES
DIABETES_IS_ADHERENT
TOTAL_RX_HYPERTENSION
TOT_DAYS_HYPERTENSION
COV_DAYS_HYPERTENSION
PDC_HYPERTENSION
HYPERTENSION_IS_ADHERENT
TOTAL_RX_STATINS
TOT_DAYS_STATINS
COV_DAYS_STATINS
PDC_STATINS
STATINS_IS_ADHERENT
CONC_MED_MED_RISK
CONC_MED_TOT_RISK
PROSP_MED_MED_RISK
PROSP_MED_TOT_RISK
CONC_PHARM_MED_RISK
CONC_PHARM_TOT_RISK
PROSP_PHARM_PHARM_RISK
PROSP_PHARM_TOT_RISK
PROSP_LOH_RISK
CC_HYPERTENSION_IND
CC_PREGNANCY_COMPLICATION_IND
CC_ANEMIA_IND
CC_MAL_BREAST_CANCER_IND
CC_HIV_IND
CC_TYPE1_DIABETES_IND
CC_COMORBID_DIABETES_IND
CC_EXCESS_WT_IND
CC_KIDNEY_FAILURE_IND
SHIELD_SUPPORT_FLAG
SHIELD_ADVOCATE_FLAG
SHIELD_CONCIERGE_FLAG
PRENATAL_PROG_FLAG
CH_CARESUPPORT_FLAG
TARGETED_CM_FLAG
LIFEREFERRALS_FLAG
NURSEHELP_FLAG
CONNECT_CARE_MGMT_FLAG
COA
COA_ALIAS
CAC
LEGAL_ENTITY
FUNDING_TYPE
PRODUCT_LEVEL_1
PRODUCT_LEVEL_2
PRODUCT_LEVEL_3
REGULATORY_AGENCIES
ALLOCATION_STATUS_CURRENT
ALLOCATION_STATUS_FUTURE
LOB_DETAIL
LOB
LOB_ALIAS
LOB1
CONSUMER_OR_COMMERCIAL
LOB2
LOB2_ALIAS
LOB3
LOB3_ALIAS
LOB4
LOB4_ALIAS
LOB5
LOB5_ALIAS
LOB6
LOB6_ALIAS
LOB7
LOB7_ALIAS
LOB8
LOB8_ALIAS
LOB9
LOB9_ALIAS
LOB10
LOB10_ALIAS
FINANCE_LOB
ENTITY_ID
REL_FIRST_NAME
REL_MIDDLE_INITIAL
REL_LAST_NAME
REL_GENDER
REL_BIRTHINFO
HOME_LOCATION_ID
HOME_ADDRESSLINE1
HOME_CITY
HOME_STATEPROVINCE
HOME_COUNTRY
HOME_ZIP
HOME_ZIP5
HOME_ZIP4
HOME_LATITUDE
HOME_LONGITUDE
HOME_CBSAMETROPOLITANSTATISTICALAREA
HOME_DELIVERYPOINTBARCODE
HOME_FIPSCOUNTYCODE
HOME_PRIMARYADDRESSLINE
HOME_RECORDTYPE
HOME_RETURNCODE
HOME_BLOCKCODE
HOME_BLOCKGROUPCODE
HOME_CBSACODE
HOME_CENSUSCODE
HOME_CENSUSCLASSCODE
HOME_TRACTCODE
MAILING_LOCATION_ID
MAILING_ADDRESSLINE1
MAILING_CITY
MAILING_STATEPROVINCE
MAILING_COUNTRY
MAILING_ZIP
MAILING_ZIP5
MAILING_ZIP4
MAILING_LATITUDE
MAILING_LONGITUDE
MAILING_CBSAMETROPOLITANSTATISTICALAREA
MAILING_DELIVERYPOINTBARCODE
MAILING_FIPSCOUNTYCODE
MAILING_PRIMARYADDRESSLINE
MAILING_RECORDTYPE
MAILING_RETURNCODE
MAILING_BLOCKCODE
MAILING_BLOCKGROUPCODE
MAILING_CBSACODE
MAILING_CENSUSCODE
MAILING_CENSUSCLASSCODE
MAILING_TRACTCODE
WORK_LOCATION_ID
WORK_ADDRESSLINE1
WORK_CITY
WORK_STATEPROVINCE
WORK_COUNTRY
WORK_ZIP
WORK_ZIP5
WORK_ZIP4
WORK_LATITUDE
WORK_LONGITUDE
WORK_CBSAMETROPOLITANSTATISTICALAREA
WORK_DELIVERYPOINTBARCODE
WORK_FIPSCOUNTYCODE
WORK_PRIMARYADDRESSLINE
WORK_RECORDTYPE
WORK_RETURNCODE
WORK_BLOCKCODE
WORK_BLOCKGROUPCODE
WORK_CBSACODE
WORK_CENSUSCODE
WORK_CENSUSCLASSCODE
WORK_TRACTCODE
PRIMARY_LOCATION_ID
PRIMARY_ADDRESSLINE1
PRIMARY_CITY
PRIMARY_STATEPROVINCE
PRIMARY_COUNTRY
PRIMARY_ZIP
PRIMARY_ZIP5
PRIMARY_ZIP4
PRIMARY_LATITUDE
PRIMARY_LONGITUDE
PRIMARY_CBSAMETROPOLITANSTATISTICALAREA
PRIMARY_DELIVERYPOINTBARCODE
PRIMARY_FIPSCOUNTYCODE
PRIMARY_PRIMARYADDRESSLINE
PRIMARY_RECORDTYPE
PRIMARY_RETURNCODE
PRIMARY_BLOCKCODE
PRIMARY_BLOCKGROUPCODE
PRIMARY_CBSACODE
PRIMARY_CENSUSCODE
PRIMARY_CENSUSCLASSCODE
PRIMARY_TRACTCODE
SECONDARY_LOCATION_ID
SECONDARY_ADDRESSLINE1
SECONDARY_CITY
SECONDARY_STATEPROVINCE
SECONDARY_COUNTRY
SECONDARY_ZIP
SECONDARY_ZIP5
SECONDARY_ZIP4
SECONDARY_LATITUDE
SECONDARY_LONGITUDE
SECONDARY_CBSAMETROPOLITANSTATISTICALAREA
SECONDARY_DELIVERYPOINTBARCODE
SECONDARY_FIPSCOUNTYCODE
SECONDARY_PRIMARYADDRESSLINE
SECONDARY_RECORDTYPE
SECONDARY_RETURNCODE
SECONDARY_BLOCKCODE
SECONDARY_BLOCKGROUPCODE
SECONDARY_CBSACODE
SECONDARY_CENSUSCODE
SECONDARY_CENSUSCLASSCODE
SECONDARY_TRACTCODE
HOME_EMAIL
HOME_EMAIL_TYPE
WORK_EMAIL
WORK_EMAIL_TYPE
OTHER_EMAIL
OTHER_EMAIL_TYPE
PRIMARY_EMAIL
PRIMARY_EMAIL_TYPE
HOME_PHONE_NUMBER
HOME_COUNTRY_CODE
WORK_PHONE_NUMBER
WORK_COUNTRY_CODE
MOBILE_PHONE_NUMBER
MOBILE_COUNTRY_CODE
OTHER_PHONE_NUMBER
OTHER_COUNTRY_CODE
PRIMARY_PHONE_NUMBER
PRIMARY_COUNTRY_CODE
IDENTIFIER_TYPE
ID
HOME_ZIP_11
MAILING_ZIP_11
WORK_ZIP_11
PRIMARY_ZIP_11
SECONDARY_ZIP_11
MARKETING_EMAIL_PREF
SURVEY_EMAIL_PREF
MANDATED_PREF
MARKETING_DIRECTMAIL_PREF
DIGITAL_PRFL_ID
REGISTRATION_DATE
PHONE_CALL_PREF
SMS_PREF
REGISTERED_EMAIL
PARENT_GROUP_NAME
CLASS_PLAN_ID
CLASS_ID
PRODUCT_ID
SUBGROUP_ID
SUBGROUP_NAME
DEATH_DATE
ACO_INDEX
ACO_NAME
ACO_PARTICIPATION_IND
PROV_IPA_ID
PROV_IPA_NAME
PROV_PMT_MDL_NM
PCR_PROV_BUS_ORG_TAX_ID
PCR_PROV_CONTR_STS_CD
PCR_SRC_PROV_SPCL_DESC
PCR_PROV_CONTR_STS_CD_SK
PCR_PROV_PMT_MDL_NM

